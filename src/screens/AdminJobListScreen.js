import React, { useState } from 'react';
import { View, Text, FlatList, TouchableOpacity, StyleSheet, SafeAreaView, Alert } from 'react-native';
import { Ionicons } from '@expo/vector-icons';

const initialJobListings = [
  { id: '1', title: 'ÌïúÌôî Î¶¨Ï°∞Ìä∏ ÎåÄÏ≤ú Ï£ºÎßê ÏïåÎ∞î Ï±ÑÏö©', wage: 'ÏùºÍ∏â 10ÎßåÏõê', date: '11.22-11.23' },
  { id: '2', title: 'Ìé∏ÏùòÏ†ê ÏïºÍ∞Ñ Í∑ºÎ¨¥Ïûê Î™®Ïßë', wage: 'ÏãúÍ∏â 12,000Ïõê', date: '11.25-11.30' },
  { id: '3', title: 'Î†àÏä§ÌÜ†Îûë ÏÑúÎπô ÏïÑÎ•¥Î∞îÏù¥Ìä∏', wage: 'ÏãúÍ∏â 11,000Ïõê', date: '12.01-12.15' },
  { id: '4', title: 'Ìò∏ÌÖî Ï≤≠ÏÜå ÏïÑÎ•¥Î∞îÏù¥Ìä∏', wage: 'ÏãúÍ∏â 10,500Ïõê', date: '12.10-12.20' },
  { id: '5', title: 'Î¨ºÎ•ò Ï∞ΩÍ≥† ÏïÑÎ•¥Î∞îÏù¥Ìä∏', wage: 'ÏùºÍ∏â 9ÎßåÏõê', date: '12.05-12.15' },
];

export default function AdminJobListScreen({ navigation }) {
  const [jobListings, setJobListings] = useState(initialJobListings);

  // üî• Í≥µÍ≥† Ï∂îÍ∞Ä Ìï®Ïàò (ÏµúÏã†Ïàú Ï†ïÎ†¨)
  const addJob = (newJob) => {
    setJobListings((prevJobs) => [newJob, ...prevJobs]); // ÏµúÏã† Í≥µÍ≥†Í∞Ä ÏúÑÎ°ú Ïò§ÎèÑÎ°ù Î∞∞Ïó¥ Îß® ÏïûÏóê Ï∂îÍ∞Ä
  };

  // ‚ùå Í≥µÍ≥† ÏÇ≠Ï†ú Ìï®Ïàò
  const deleteJob = (jobId) => {
    Alert.alert('ÏÇ≠Ï†ú ÌôïÏù∏', 'Ï†ïÎßêÎ°ú Ïù¥ Í≥µÍ≥†Î•º ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?', [
      { text: 'Ï∑®ÏÜå', style: 'cancel' },
      {
        text: 'ÏÇ≠Ï†ú',
        onPress: () => {
          setJobListings((prevJobs) => prevJobs.filter((job) => job.id !== jobId));
          Alert.alert('ÏÇ≠Ï†ú ÏôÑÎ£å', 'Í≥µÍ≥†Í∞Ä ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.');
        },
      },
    ]);
  };

  return (
    <SafeAreaView style={{ flex: 1 }}>
      <View style={styles.container}>
        {/* üìå Í≥µÍ≥† Î™©Î°ù */}
        <FlatList
          data={jobListings}
          keyExtractor={(item) => item.id}
          contentContainerStyle={{ paddingBottom: 80 }}
          renderItem={({ item }) => (
            <View style={styles.jobCard}>
              <TouchableOpacity
                style={styles.jobContent}
                onPress={() =>
                  navigation.navigate('AdminJobDetail', {
                    job: item,
                    updateJob: (updatedJob) => {
                      setJobListings((prevJobs) =>
                        prevJobs.map((job) => (job.id === updatedJob.id ? updatedJob : job))
                      );
                    },
                  })
                }
              >
                <View style={{ flex: 1 }}>
                  <Text style={styles.title}>{item.title}</Text>
                  <Text style={styles.wage}>{item.wage}</Text>
                  <Text style={styles.date}>{item.date}</Text>
                </View>
              </TouchableOpacity>

              {/* ‚ùå ÏÇ≠Ï†ú Î≤ÑÌäº */}
              <TouchableOpacity style={styles.deleteButton} onPress={() => deleteJob(item.id)}>
                <Ionicons name="trash-outline" size={24} color="red" />
              </TouchableOpacity>
            </View>
          )}
          showsVerticalScrollIndicator={false}
        />

        {/* üìå ÌïòÎã® Í≥µÍ≥† Îì±Î°ù Î≤ÑÌäº */}
        <TouchableOpacity
          style={styles.addButton}
          onPress={() => navigation.navigate('AdminJobForm', { addJob })}
        >
          <Ionicons name="add-circle-outline" size={28} color="white" />
          <Text style={styles.addButtonText}> Í≥µÍ≥† Îì±Î°ù</Text>
        </TouchableOpacity>
      </View>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, padding: 20, backgroundColor: '#fff' },
  
  jobCard: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F8F8F8',
    padding: 15,
    marginBottom: 15,
    borderRadius: 10,
    borderWidth: 1,
    borderColor: '#ccc',
    shadowColor: '#000',
    shadowOpacity: 0.1,
    shadowRadius: 3,
    shadowOffset: { width: 0, height: 2 },
  },
  jobContent: { flex: 1 },
  
  title: { fontSize: 18, fontWeight: 'bold', color: '#333', marginBottom: 5 },
  wage: { fontSize: 16, color: 'red', marginBottom: 5 },
  date: { fontSize: 14, textAlign: 'right', color: 'gray' },

  deleteButton: {
    padding: 8,
    borderRadius: 5,
    alignItems: 'center',
  },

  addButton: {
    position: 'absolute',
    bottom: 20,
    alignSelf: 'center',
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#007AFF',
    paddingVertical: 12,
    paddingHorizontal: 20,
    borderRadius: 30,
    elevation: 5,
    shadowColor: '#000',
    shadowOpacity: 0.2,
    shadowRadius: 5,
    shadowOffset: { width: 0, height: 2 },
  },
  addButtonText: { color: 'white', fontSize: 16, fontWeight: 'bold', marginLeft: 8 },
});
